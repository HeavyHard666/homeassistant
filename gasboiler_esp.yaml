substitutions:
  pin_relay: D6
  pin_gas_counter: D5
  pin_dht: D0

  relays_inverted: 'true'

esphome:
  name: gasboiler
  platform: ESP8266
  board: nodemcuv2

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
      hidden: false
      priority: 10
    - ssid: !secret wifi_ssid_3
      password: !secret wifi_password_3
      priority: 8
      hidden: true
    - ssid: !secret wifi_ssid_2
      password: !secret wifi_password_2
      priority: 5
      hidden: true

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Gasboiler Fallback Hotspot"
    password: "1234567890"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: "1234567890"

ota:
  password: "1234567890"

binary_sensor:
# Status connection sensor
  - platform: status
    name: Gasboiler Status
    id: gas_connect
# Sensor pulce detect for Gas counter
  - platform: gpio
    name: Gas counter
    id: gas
    device_class: gas
    pin:
      number: $pin_gas_counter
      mode: INPUT_PULLUP
      inverted: $relays_inverted

output:

  # Relay open heat
  - platform: gpio
    id: relay_toggle_gas_boiler
    pin:
      number: $pin_relay
      mode: OUTPUT
      inverted: $relays_inverted   

sensor:
  - platform: homeassistant
    name: "temp_sensor_home_assistant"
    entity_id: sensor.target_temperature_template
    id: temp_sensor_home_assistant
    force_update: true
  - platform: template
    name: target_temperature_mean
    id: target_temp_mean
    lambda: |-
      if (id(gas_connect).state) {
        return (id(temp_sensor_home_assistant).state);
      } else {
        return (id(dth_temp).state);
      }
    update_interval: 10s
# Uptime sensor
  - platform: uptime
    name: Uptime Sensor
    id: uptime_s
# Wifi sensor
  - platform: wifi_signal
    name: "WiFi Signal Gasboiler"
    update_interval: 60s
  - platform: dht
    pin: $pin_dht
    temperature:
      name: "Gasboiler Kitchen Temp"
      id: dth_temp
    humidity:
      name: "Gasboiler Kitchen Hum"
    model: DHT11  
    update_interval: 30s

    
text_sensor:
# Uptime sensor in days, hours, min, sec
  - platform: template
    name: "Uptime Gasboiler"
    lambda: |-
      uint32_t dur = id(uptime_s).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock
    update_interval: 15s


switch:
# Restart ESP
  - platform: restart
    name: "Gasboiler Restart"
# Shutdown ESP
  - platform: shutdown
    name: "Gasboiler Shutdown"
# Toggle Gas boiler
  - platform: gpio
    pin:
      number: $pin_relay
      inverted: $relays_inverted
    name: "Gas boiler"
    id: gas_boiler
    
climate:
  - platform: thermostat
    name: Gasboiler
    sensor: target_temp_mean
    default_target_temperature_low: 24
    heat_action:
      - switch.turn_on: gas_boiler
    idle_action:
      - switch.turn_off: gas_boiler
    away_config:
      default_target_temperature_low: 19
    hysteresis: 0.1